variables:
  MODULE_NAME: f75111_gpio
  https_proxy: ${CODE_PROXY}
  http_proxy: ${CODE_PROXY}
  no_proxy: api.siemens.com,cr.siemens.com,code.siemens.com,devops.bt.siemens.com
  BUILD_CONTAINER: ${CI_REGISTRY_IMAGE}/kmod-builder:latest

stages:
  - prepare
  - test
  - build
  - release

prepare build container:
  stage: prepare
  when: manual
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.build"
      --destination ${BUILD_CONTAINER}
      --build-arg http_proxy=${CODE_PROXY}
      --build-arg https_proxy=${CODE_PROXY}

gitleaks check:
  stage: test
  image:
    name: zricethezav/gitleaks:latest
    entrypoint: [""]
  variables:
    GITLEAKS_CONFIG: .gitleaks.toml
    GITLEAKS_REPORT: gitleaks_report.json
  script: gitleaks detect --source="." --config=${GITLEAKS_CONFIG} --report-path=${GITLEAKS_REPORT} --verbose
  artifacts:
    reports:
      secret_detection:
        - ${GITLEAKS_REPORT}

repolinter check:
  stage: test
  image: node:alpine3.17
  script:
    - npm install -g repolinter
    - apk update && apk add --no-cache alpine-sdk ruby-dev cmake icu-dev zlib-dev openssl-dev
    - gem install github-linguist
    - gem install licensee
    - repolinter lint .

build module   in container:
  stage: build
  image: ${BUILD_CONTAINER}
  script: |
    set -x
    source /root/.bashrc
    mkdir -p temp
    echo -e "${MOK_PEM_PRIVATE}" > temp/.priv && echo -e "${MOK_PEM_CERT}" > temp/.x509
    make sign
    echo "Created signed and compressed kernel module:"
    modinfo *.ko.zst
  artifacts:
    paths:
      - "*.ko.zst"

release kernel container:
  stage: release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.release"
      --destination ${CI_REGISTRY_IMAGE}/f75111_gpio:latest
      --build-arg http_proxy=${CODE_PROXY}
      --build-arg https_proxy=${CODE_PROXY}